#include "utils.h"

const char *test_floors[] = {
    "()()()", "(((",
    "()(((()))(()()()((((()(((())(()(()((((((()(()(((())))((()(((()))((())(()(("
    "()()()()(((())(((((((())))()()(()(()(())(((((()()()((())(((((()()))))()(()"
    ")(((())(())((((((())())))(()())))()))))()())()())((()()((()()()()(()(((((("
    "((()()())((()()(((((()(((())((())(()))()((((()((((((((())()((()())(())((()"
    "))())((((()())(((((((((((()()(((((()(()))())(((()(()))())((()(()())())())("
    "()(((())(())())()()(()(()((()))((()))))((((()(((()))))((((()(()(()())())()"
    "(((()((((())((((()(((()()(())()()()())((()((((((()((()()))()((()))()(()()("
    "(())))(((()(((()))((()((()(()))(((()()(()(()()()))))()()(((()(((())())))))"
    "((()(((())()(()(())((()())))((((())))(()(()(()())()((()())))(((()((()(())("
    ")()((()((())(()()((())(())()))()))((()(())()))())(((((((()(()()(()(())()))"
    ")))))(()((((((())((((())((())())(()()))))()(())(()())()())((())(()))))(())"
    ")(()((()))()(()((((((()()()()((((((((()(()(())((()()(()()))(())()())()((()"
    ")))()))()())(((()))(())()(())()))()((()((()(()()())(())()()()((())())))((("
    ")()(()()((()(())()()())(((()(()()))))(())))(()(()())()))()()))))))()))))(("
    "((((())))())))(()(())())(()())))))(()))()))))))()((()))))()))))(()(()((()("
    "))())(()()))))(((())()))())())())(((()(()()))(())()(())(())((((((()()))))("
    "(()(()))))))(()))())(((()()(()))()())()()()())))))))))))))(())(()))(()))(("
    "()(())(()())(())())(()())(())()()(()())))()()()))(())())()))())())(())((()"
    ")))))))(())))(())))))()))))((())(()(((()))))(()))()((()(())))(()())(((((()"
    "))()())()()))))()))))()))())(()(()()()))()))))))((()))))))))))()((()))((()"
    "(())((())()()(()()))()(()))))()()(()))()))(((())))(())()((())(())(()())()("
    "))())))))))())))()((())))()))(()))()()))(((((((()))())(()()))(()()(()))()("
    "()((()())()))))))(((()()()())))(())()))()())(()()))()()))))))))(())))()))("
    ")()))))))()))()())))()(())(())))))()(())()()(()()))))())((()))))()))))(()("
    "((((()))))))))())))())()(())()()))))(())))())()()())()()())()(()))))()))()"
    "))))))))())))((()))()))()))())))()())()()())))())))(()((())()((()))())))))"
    "())()(())((())))))))))))())()())(())())())(()))(()))()))())(()(())())()())"
    "()()(()))))(()(())))))))(())))())(())))))))())()()(())())())))(())))))()))"
    "()(()())()(()))())())))))()()(()))()))))())))))))))()))))()))))))())()())("
    ")()))))()())))())))))))))))()()))))()()(((()))()()(())()))))((()))))(()))("
    "())())))(())()))))))(()))()))))(())())))))()))(()())))))))))))))()))))))))"
    ")()((()())(()())))))))((()))))(())(())))()(()())())))())())(()()()())))())"
    ")))))())))))())()()())))))))))))()()(()))))()())()))((()())(()))))()(())))"
    ")))))))()())())(((())(()))))())()))()))()))))))()))))))(()))))()))))()(())"
    "))(())))(()))())()()(()()))()))(()()))))))))()))(()))())(()()(()(()())()()"
    "))()))))))))(())))))((()()(()))())())))))()))())(()())()()))())))()(()()()"
    "()))((())())))())()(()()))()))))))))(()))(())))()))))(()(()())(()))))()())"
    "())()))()()))())))))))))))())()))))))()))))))))())))))()))))())(()())))(()"
    ")()))())())))))()()(()()())(()())))()()))(((()))(()()()))))()))))()))))((("
    "))))()((((((()()))))))())))))))))))(((()))))))))))))(())())))))())(())))))"
    ")(()))((()))())))()(()((()))()))()))))))))))())()))()(()()))))())))())(())"
    "()(()))()))())(()))()))))(()()))()()(())))))()))(())(()(()()))(()()())))))"
    "(((()))))))()))))))))))))(())(()))))()())())()()((()()))())))))(()))))()))"
    ")))))()()()))))))))())))()(((()()))(())))))(((())())))))((()))()(()))(()))"
    "))(()())))(()))())))))()))))(())(())))()((()))(())())))()()))()))))))))())"
    ")(()()()(()()()(()))())(())()())(((()))(())))))))))(((()())))()()))))))))("
    ")(())(()))()((((())(())(()())))()))(((())()()()))((()))(()))())())))())))("
    "()))())()())())(()(())())()()()(())))())(())))(())))(())()))()))(()((())))"
    ")))))())(()))))))())(()()))()()))()(()(()())))()()(()((()((((((()))(())))("
    ")()()))())()))((()()(()))())((()(()(()))(()()))))()())))()))()())))))))()("
    ")((()())(())))()))(()))(())(()))())(()(())))()()))))))(((()(((()()))()(()("
    "())())((()()))()))()))()))()(()()()(()))((()())()(())))()()))(((())()()())"
    "(())()((()()()()(()(())(()()))()(((((()())))((())))))(()()()))))(((()(()))"
    ")()))((()((()(())()(()((())))((()())()(()))(((()())()()(()))(())(((()((()("
    "))()((())()())(((()()))((()((())(()))(()())(()()()))((()))(())(()((()()())"
    "((()))(())))(())(())(())))(()())))(((((()(()(((((()())((((()(()())(())(()("
    ")(((())((()(((()()(((()()((((((())))())(()((((((()(()))()))()()((()((())))"
    ")()(()()(()((()()))))))(((((()(((((())()()()(())())))))))()))((()()(())))("
    "())(()()()())))))(()((((())))))))()()(((()(()(()(()(()())()()()(((((((((()"
    "()())()(()))((()()()()()(((((((()())()((())()))((((((()(()(()(()())(((()(("
    "(((((()(((())(((((((((())(())())()))((()(()))(((()()())(())(()(()()(((()(("
    "))()))())))(())((((((())(()()())()()(((()(((())(()(((())(((((((()((((((((("
    "()))(())(()(()(()))))((()))()(())())())((()(()((()()))((()()((()(())(())(("
    ")((())(((())(((()()()((((((()()(())((((())()))))(())((()(()((())))(((((()("
    "()()())())((())())))((())((()((()()((((((())(((()()(()())())(()(()))(()(()"
    "))())())()(((((((()(((()(())()()((())((()(()()((()(()()(((((((((((())((())"
    "((((((())((()((((()(()((((()(((((((())()((()))))())()((()((((()(()(((()((("
    ")())))(())())(((()(((())((((((()(((((((((()()(())))(()(((((()((((()())))(("
    "()((()((()(()()(((())((((((((((((()(((())(()(((((()))(()()(()()()()()()((("
    "))(((((((())(((((())))))())()(()()(()(()(((()()(((((())(()((()((()(((()()("
    "(()((((())()))()((((())(())))()())(((())(())(()()((()(((()()((((((((((()()"
    "(()())())(((((((((())((((()))()()((((())(()((((()(((())())(((((((((((()((("
    "(())))(())(()(((()(((()((())(((((()((()()(()(()()((((((()((((()((()(()((()"
    "(()((((((()))))()()(((((()((()(()(())()))(())(((((((()((((()())(()((()((()"
    "(()))())))(())((()))))(((((((()()()())(()))(()()((()())()((()((()()()(()(("
    ")()))(()())(())(((((()(((((((((((()((()(((()(((((((()()((((((()(((((()(()("
    "(()(((((())((((((()))((((())((()()((())(((())()(((((()()(((((()((()(()(((("
    "(((()(((((()((()((()((())(())((())(()))()()))(()()(()(()()(((((((()(((()(("
    "(())()(((((()((((((()())((((())()((()((()(()()())(()))((((()()((((((()((()"
    "(()(()((((()((()((())((((((()(()(())((((((()((((((((((()((())()))()(()(()("
    "((((()()()))((())))()(()((((((((((((((()(((()((((()((())((()((()(((()()(()"
    "(((()((())(()()())))()(()(()(((((()()(()(()((((()(((((())()(()(()))(((((()"
    "()(((()()(())((((((((((((((())((())(((((((((((())()()()(())()(()(()((((((("
    "((())(((()))(()()())(()((((()(())(((((()())(())((((((((())()((((()((((((()"
    ")(()((()(())(((()((((()))(((((((((()()))((((()(())()()()(())(()((())((()()"
    "))()(((())(((((())((((((()()))(((((((((()((((((())))(((((((()((()(()(())))"
    "())(()(()))()(((((()())(()))()(()(())(((()))))())()())))(((((()))())()((()"
    "(()))))((()()()((((((()))()()((((((((())((()(()(((()(()((())((()())(()(((("
    "())(()(((()()()(()(()()))())())((((((((((())())((()))()((())(())(())))())("
    ")(()()(())))())(()))(((()(()()(((()(((())))()(((()(())()((((((())()))()))("
    ")((((((()(()(((((()())))()))))())()()(((()(((((())((()()(()((()((()(()(()("
    "())))(()()()()((()(())(((()((()))((((()))())(())))())(()))()()()())()))((("
    "()()())()((())))(())(()()()()(()())((()(()()((((())))((()((()(())((()(()(("
    "())()(()()(((()())()()())((()))((())(((()()(())))()()))(((()((())()(((((()"
    "())(())((())()())())((((((()(()(((((()))(()("};

int get_floor(const char *floor) {
  int result = 0;
  while (*floor) {
    if (*floor == '(')
      ++result;
    else if (*floor == ')')
      --result;
    ++floor;
  }

  return result;
}

int basement_idx(const char *floor) {
  int result = 0, idx = 0;
  while (*floor && result >= 0) {
    if (*floor == '(')
      ++result;
    else if (*floor == ')')
      --result;
    ++floor;
    ++idx;
  }
  return idx;
}

void d1() {
  int result1 = get_floor(test_floors[0]);
  int result2 = get_floor(test_floors[1]);
  int result3 = get_floor(test_floors[2]);
  int basement = basement_idx(test_floors[2]);

  std::cout << "\t1: " << result1 << std::endl;
  std::cout << "\t2: " << result2 << std::endl;
  std::cout << "\t3: " << result3 << std::endl;
  std::cout << "\tBasement: " << basement << std::endl;
}